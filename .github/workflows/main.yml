name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read
  id-token: write
  packages: write # permission to push images to Github Packages container registry
  pages: write    # permission to deploy frontend to Github Pages

jobs:
  build-and-push-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to GitHub Packages container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # TODO: Image versioning instead of overriding latest
      - name: ‚öíÔ∏è Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./jamvas-backend
          file: ./jamvas-backend/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}:latest

  deploy-backend:
    runs-on: ubuntu-latest
    needs: build-and-push-backend
    steps:
      - name: Login to GitHub Packages container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SERVICE_PRINCIPAL }}

      - uses: azure/webapps-deploy@v2
        name: üöÄ Deploy to Azure App Service
        with:
          app-name: 'jamvas'
          images: ghcr.io/${{ github.repository }}:latest

  build-and-deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Determine and set build version and commit hash environment variables
        run: |
          echo "BUILD_VERSION=${{ github.run_id }}.${{ github.run_number }}.${{ github.run_attempt }}" >> $GITHUB_ENV
          echo "COMMIT_HASH=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          cd jamvas-frontend
          npm ci

      - name: ‚öíÔ∏è Build for demo environment
        run: |
          cd jamvas-frontend
          VITE_BACKEND_BASE_URL=${{ vars.BACKEND_BASE_URL }}
          VITE_BACKEND_API_BASE_URL=${{ vars.BACKEND_API_BASE_URL }}
          VITE_BUILD_VERSION=${{ env.BUILD_VERSION }} 
          VITE_COMMIT_HASH=${{ env.COMMIT_HASH }}
          npm run build
        env:
          VITE_BACKEND_BASE_URL: ${{ vars.BACKEND_BASE_URL }}
          VITE_BACKEND_API_BASE_URL: ${{ vars.BACKEND_API_BASE_URL }}

      - name: Setup Github Pages
        uses: actions/configure-pages@v3

      - name: Upload built artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './jamvas-frontend/dist'

      - name: üöÄ Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
